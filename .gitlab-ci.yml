stages:
    - test
    - examples
    - deploy_test
    - test_install
    - deploy_prod
    - test_pypi

test_slurm:
    stage: test
    script: ./run_tests.sh
    tags:
            - slurm.physik.lmu.de

test_docker:
    stage: test
    image: ubuntu:rolling
    tags: 
            - docker.physik.lmu.de
    before_script:
            - apt update
            - export DEBIAN_FRONTEND=noninteractive
            - apt-get install -y libproj-dev proj-data proj-bin
            - apt-get install -y libgeos-dev
            - apt-get install -y libeccodes-dev
            - apt install -yq git vim python3 python3-pip python3-venv
    script: ./run_tests.sh

# The examples in the slurm runner are giving problems
# because cartopy wants to write into the home directory and 
# the gitlab runner does not have permissions.
#
# For now running the examples in the docker runner its enough.
# run_examples_slurm:
#     stage: examples
#     script: ./run_examples.sh
#     tags: 
#             - slurm.meteo.physik.lmu.de

run_examples_docker:
    stage: examples
    image: ubuntu:rolling
    tags: 
            - docker.physik.lmu.de
    before_script:
            - apt update
            - export DEBIAN_FRONTEND=noninteractive
            - apt-get install -y libproj-dev proj-data proj-bin
            - apt-get install -y libgeos-dev
            - apt-get install -y libeccodes-dev
            - apt install -yq git vim python3 python3-pip python3-venv
    script: ./run_examples.sh

    artifacts:
            name: example_plot_01
            paths:
                    - examples/example_plot_icon_01.png
 
deploy-to-testpypi:
  stage: deploy_test
  image: python:3.10
  tags:
    - docker.physik.lmu.de
  only:
    - tags
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine upload -u "__token__" -p "$PYPI_TEST_PASSWORD" --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*

install-from-testpypi:
  stage: test_install
  image: ubuntu:rolling
  tags:
    - docker.physik.lmu.de
  only:
    - tags
  needs: ["deploy-to-testpypi"]
  before_script:
    - apt update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y libproj-dev proj-data proj-bin
    - apt-get install -y libgeos-dev
    - apt-get install -y libeccodes-dev
    - apt install -yq git vim python3 python3-pip python3-venv
  script:
    - python3 -m venv venv
    - . venv/bin/activate; pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ enstools

deploy-to-pypi:
  stage: deploy_prod
  image: python:3.10
  only:
    - tags
  tags:
    - docker.physik.lmu.de
  needs: ["install-from-testpypi"]
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine upload -u "__token__" -p "$PYPI_PASSWORD" --skip-existing dist/*

install-from-pypi:
  stage: test_pypi
  image: ubuntu:rolling
  tags:
    - docker.physik.lmu.de
  only:
    - tags
  needs: ["deploy-to-pypi"]
  before_script:
    - apt update
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y libproj-dev proj-data proj-bin
    - apt-get install -y libgeos-dev
    - apt-get install -y libeccodes-dev
    - apt install -yq git vim python3 python3-pip python3-venv
  script:
    - python3 -m venv venv
    - . venv/bin/activate; pip install enstools
